<?xml version="1.0" encoding="UTF-8" ?>


<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.harvey.mapper.GoodMapper"><!--名字写代理接口-->


    <resultMap id="GoodMap" type="Good">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="price" property="price"/>
        <result column="stock" property="stock"/>
    </resultMap>


    <insert id="addGood" useGeneratedKeys="true" keyProperty="id">
        insert into good(name,price,stock)
        values(#{name},#{price},#{stock});
    </insert>


    <delete id="delById">
        delete from good where
        id = #{id}
    </delete>

    <delete id="delByIds">
        delete from good where
        id in
        <foreach
                collection="array"
                item="id"
                separator=","
                open="("
                close=")">
            #{id}
        </foreach>
        ;
        <!--删除了个寂寞也是删,离谱-->
    </delete>

    <update id="update">
        update good
        <set>
            <if test="price!=null">
                price = #{price},
            </if>
            <!--↓这里用and而不是&&-->
            <if test="name!=null and name!= '' ">
                name = #{name},
            </if>
            <if test="stock!=null">
                stock = #{stock},
            </if>
        </set>
        where
        id=#{id}
        ;
        <!--如果good不写id,id默认为0,会删除id = 0 的 商品 不符合-->

    </update>

    <!--id是这一句命令的唯一标识,不能重复-->
    <select id="selectAll" resultMap="GoodMap"><!--起了别名之后就方便了-->
        select id,name,price,stock from good ;
    </select>

    <select id="selectById" parameterType="Integer" resultMap="GoodMap">
        select id,name,price,stock
        from good where id like concat('%',#{id},'%');
    </select>

    <select id="selectByIds" resultMap="GoodMap">
        select id,name,price,stock
        from good where
        <foreach
                collection="array"
                item="id"
                separator=" or ">
            id like concat('%',#{id},'%')
        </foreach>
        ;
    </select>

    <select id="selectByName" resultMap="GoodMap">
        select id,name,price,stock
        from good where name like concat('%',#{name},'%');
    </select>

    <select id="selectByNames" resultMap="GoodMap">
        select id,name,price,stock
        from good where
        <foreach
                collection="array"
                item="name"
                separator=" or ">
            name like concat('%',#{name},'%')
        </foreach>
        ;
    </select>

    <select id="selectByPrices" resultMap="GoodMap">
        select id,name,price,stock
        from good
        <where>
            <![CDATA[
                price<=#{high} and price >= #{low}
            ]]>
        </where>
    </select>

    <select id="selectByPrice" resultMap="GoodMap">
        select id,name,price,stock
        from good
        <where>
            price = #{price}
        </where>
    </select>

    <select id="selectByStocks" resultMap="GoodMap">
        select id,name,price,stock
        from good where <![CDATA[
            stock >= #{low} and stock <= #{high}
        ]]>;
    </select>

    <select id="selectByStock" resultMap="GoodMap">
        select id,name,price,stock
        from good where stock = #{stock}
    </select>

    <select id="selectByCondition" resultMap="GoodMap">

        select id,name,price,stock
        from good
        <where>
            <if test="price!=null">
                price = #{price}
            </if>
            <!--↓这里用and而不是&&-->
            <if test="name!=null and name!= '' ">
                or name like #{name}
            </if>
            <!--
              这里的语句都是接字符串
             -->
            <if test="stock!=null">
                or stock = #{stoke}
            </if>
        </where>

    </select>

    <!--已弃用-->
    <select id="orderByAsc" resultMap="GoodMap">
        select id,name,price,stock
        from good order by
        <choose>
            <when test="column=='STOCK'">
                stock
            </when>
            <when test="column=='PRICE'">
                price
            </when>
            <when test="column=='NAME'">
                name
            </when>
            <otherwise>
                id
            </otherwise>
        </choose>asc
        ;
    </select>

    <!--已弃用-->
    <select id="orderByDesc" resultMap="GoodMap">
        select id,name,price,stock
        from good order by
        <choose>
            <when test="column=='STOCK'">
                stock
            </when>
            <when test="column=='PRICE'">
                price
            </when>
            <when test="column=='NAME'">
                name
            </when>
            <otherwise>
                id
            </otherwise>
        </choose>desc
    </select>

    <select id="orderBy" resultMap="GoodMap">
        select id,name,price,stock
        from good order by
        <foreach collection="rules"
                 item="rule"
                 separator=",">
            ${rule}
        </foreach>
    </select>

    <select id="dividePage" resultMap="GoodMap">
        select id,name,price,stock
        from good limit #{start},#{len};
    </select>

    <select id="getLen" resultType="int">
        select count(*) from good
    </select>

    <select id="orderThenPage" resultMap="GoodMap">
        select id,name,price,stock
        from good order by
        <choose>
            <when test="column=='STOCK'">
                stock
            </when>
            <when test="column=='PRICE'">
                price
            </when>
            <when test="column=='NAME'">
                name
            </when>
            <otherwise>
                id
            </otherwise>
        </choose>
        <choose>
            <when test="isDesc=='true'">
                desc
            </when>
            <otherwise>
                asc
            </otherwise>
        </choose>
        limit #{start},#{len};
    </select>

</mapper>